/*
Deployment script for QuizDB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "QuizDB"
:setvar DefaultFilePrefix "QuizDB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367)) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Rename refactoring operation with key a0a9bffb-cf76-48a7-bd83-346122cf1175 is skipped, element [dbo].[Categories].[Category] (SqlSimpleColumn) will not be renamed to ID';


GO
PRINT N'Rename refactoring operation with key 9d8a79ea-89b4-48ad-8759-79ea6b2ea589 is skipped, element [dbo].[Question].[CorrectAnswer] (SqlSimpleColumn) will not be renamed to CorrectAnswerID';


GO
PRINT N'Rename refactoring operation with key 24d46bd1-b58e-41a1-88bc-3bff7aa7556e is skipped, element [dbo].[Questionnaire].[Description] (SqlSimpleColumn) will not be renamed to Name';


GO
PRINT N'Rename refactoring operation with key c97937c3-6246-4358-bf88-dff0ebb255eb is skipped, element [dbo].[Question_Questionnaire].[Id] (SqlSimpleColumn) will not be renamed to Questionnaire_ID';


GO
PRINT N'Rename refactoring operation with key 154f1cee-29e5-4888-b50d-0821273eed32 is skipped, element [dbo].[Category].[Id] (SqlSimpleColumn) will not be renamed to Category';


GO
PRINT N'Rename refactoring operation with key 5eba4a8f-a445-46fd-9507-3074e726aebb is skipped, element [dbo].[Categories].[categoru] (SqlSimpleColumn) will not be renamed to category';


GO
PRINT N'Rename refactoring operation with key 12d8b572-6f7a-485f-982c-08ed7df29431 is skipped, element [dbo].[Question].[Category] (SqlSimpleColumn) will not be renamed to CategoryID';


GO
PRINT N'Creating [dbo].[Answers]...';


GO
CREATE TABLE [dbo].[Answers] (
    [Id]         INT            IDENTITY (1, 1) NOT NULL,
    [QuestionID] INT            NOT NULL,
    [IsCorrect]  BIT            NULL,
    [Answer]     NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Categories]...';


GO
CREATE TABLE [dbo].[Categories] (
    [ID]       INT            IDENTITY (1, 1) NOT NULL,
    [category] NVARCHAR (MAX) NOT NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[Question]...';


GO
CREATE TABLE [dbo].[Question] (
    [Id]              INT            IDENTITY (1, 1) NOT NULL,
    [Question]        NVARCHAR (MAX) NOT NULL,
    [CategoryID]      INT            NOT NULL,
    [AmountOfAnswers] INT            NOT NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating [dbo].[Question_Questionnaire]...';


GO
CREATE TABLE [dbo].[Question_Questionnaire] (
    [Questionnaire_ID] INT NOT NULL,
    [QuestionID]       INT NOT NULL,
    PRIMARY KEY CLUSTERED ([Questionnaire_ID] ASC, [QuestionID] ASC)
);


GO
PRINT N'Creating [dbo].[Questionnaire]...';


GO
CREATE TABLE [dbo].[Questionnaire] (
    [Id]       INT            IDENTITY (1, 1) NOT NULL,
    [Name]     NVARCHAR (MAX) NULL,
    [Category] NVARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[Answers]...';


GO
ALTER TABLE [dbo].[Answers] WITH NOCHECK
    ADD FOREIGN KEY ([QuestionID]) REFERENCES [dbo].[Question] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Question]...';


GO
ALTER TABLE [dbo].[Question] WITH NOCHECK
    ADD FOREIGN KEY ([CategoryID]) REFERENCES [dbo].[Categories] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Question_Questionnaire]...';


GO
ALTER TABLE [dbo].[Question_Questionnaire] WITH NOCHECK
    ADD FOREIGN KEY ([Questionnaire_ID]) REFERENCES [dbo].[Questionnaire] ([Id]);


GO
PRINT N'Creating unnamed constraint on [dbo].[Question_Questionnaire]...';


GO
ALTER TABLE [dbo].[Question_Questionnaire] WITH NOCHECK
    ADD FOREIGN KEY ([QuestionID]) REFERENCES [dbo].[Question] ([Id]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '9d8a79ea-89b4-48ad-8759-79ea6b2ea589')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('9d8a79ea-89b4-48ad-8759-79ea6b2ea589')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '24d46bd1-b58e-41a1-88bc-3bff7aa7556e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('24d46bd1-b58e-41a1-88bc-3bff7aa7556e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c97937c3-6246-4358-bf88-dff0ebb255eb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c97937c3-6246-4358-bf88-dff0ebb255eb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '154f1cee-29e5-4888-b50d-0821273eed32')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('154f1cee-29e5-4888-b50d-0821273eed32')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'a0a9bffb-cf76-48a7-bd83-346122cf1175')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('a0a9bffb-cf76-48a7-bd83-346122cf1175')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5eba4a8f-a445-46fd-9507-3074e726aebb')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5eba4a8f-a445-46fd-9507-3074e726aebb')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '12d8b572-6f7a-485f-982c-08ed7df29431')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('12d8b572-6f7a-485f-982c-08ed7df29431')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Answers'), OBJECT_ID(N'dbo.Question'), OBJECT_ID(N'dbo.Question_Questionnaire'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
